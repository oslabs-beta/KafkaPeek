version: "3"

services: # zookeeper, kafka, jmx-kafka and prometheus are in a common network in the same docker container
  zookeeper: # First Image
    image: docker.io/bitnami/zookeeper:latest # which image will we build from
    ports:
      - "2181:2181" # HOST PORT: CONTAINER PORT
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes #Environmental variables
    container_name: zookeeper

  kafka: # Second Image
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9991:9991"
    environment:
      # - KAFKA_ADVERTISED_HOST_NAME=${HOST_IP}
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_JMX_PORT=5556
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=5556
      - KAFKA_CREATE_TOPICS="anotherTopic:1:1"
      # - KAFKA_JMX_OPTS=-javaagent:"./etc/jmx_exporter/jmx_prometheus_javaagent-0.17.1.jar"=1234:config.yaml
    container_name: kafka
    depends_on:
      - zookeeper

  jmx-kafka: #Third Image
    image: "sscaling/jmx-prometheus-exporter:latest"
    ports:
     - "5556:5556"
    environment:
     CONFIG_YML : "/config.yml"
    volumes:
     - ./etc/jmx_exporter/config.yml:/config.yml #Input config file: Output config file into docker container
    #  - JVM_OPTS:-Xmx128M
    container_name: jmx-kafka
    depends_on:
     - kafka
     
  prometheus: #Fourth Image
    image: "docker.io/bitnami/prometheus:latest"
    ports:
     - "9090:9090"
    volumes:
     - ./etc/prometheus/prometheus.yml:/config/prometheus.yml
    command: "--config.file=/config/prometheus.yml"
    container_name: prometheus
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local